{"version":3,"file":"components-Page-Size-Components-Header-stories.9490470a3bb4c01f9ef7.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAGA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA","sources":["webpack://prony/./src/components/Page-Size-Components/Header.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./header.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Search from '../SmallComponents/Inputs/Search';\r\n\r\nimport siteLogo from '../../img/site-logo.svg';\r\nimport notifyIcon from '../../img/notification-icon.svg';\r\nimport editIcon from '../../img/edit-icon.svg';\r\nimport diamondIcon from '../../img/diamond-icon.svg';\r\nimport logoutIcon from '../../img/logout-icon.svg';\r\nimport userAvatar from '../../img/creator-avatar.svg';\r\n\r\nimport OrangeButton from '../SmallComponents/Buttons/OrangeButton';\r\nimport { logoutUser } from '../../data/store/userSlice';\r\n\r\n\r\nconst Header = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useDispatch();\r\n    // const user = useSelector(state => state.users.users[0]);\r\n    const userObj = useSelector(state => state.users.users);\r\n    // console.log(\"ðŸš€ ~ file: EditProfile.jsx:89 ~ EditProfile ~ userObj:\", userObj)\r\n\r\n    // Define the function to get and validate the stored playlist data\r\n    const getStoredUser = () => {\r\n        try {\r\n            // Check if currentUser is available in Redux\r\n            const currentUser = useSelector(state => state.users.users);\r\n            if (currentUser && currentUser.length > 0) {\r\n                // Save currentUser to local storage\r\n                sessionStorage.setItem(`currentUser`, JSON.stringify(currentUser));\r\n                return currentUser; // Return the Redux data\r\n            } else {\r\n                // If not available in Redux, check local storage\r\n                const storedUser = sessionStorage.getItem('currentUser');\r\n                if (storedUser) {\r\n                    // Parse the stored data\r\n                    const parsedUser = JSON.parse(storedUser);\r\n                    // Use the stored playlist\r\n                    // You can update the Redux state here if needed\r\n                    return parsedUser;\r\n                } else {\r\n                    // If not available in Redux or local storage, return null\r\n                    return null;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            // Handle any errors here if needed\r\n            console.error(error);\r\n            return null; // Return null in case of an error\r\n        }\r\n    };\r\n\r\n    // Call the function to get the stored playlist data\r\n    const storedUser = getStoredUser();\r\n\r\n\r\n\r\n    const currentProfileRole = storedUser ? storedUser[0].user_role : \"No info\";\r\n    // Now you can access the properties of the stored playlist\r\n    const currentProfileAvatar = storedUser ? storedUser[0].user_avatar : \"No info\";\r\n\r\n    const handleClick = () => {\r\n        navigate(\"/SignUp\");\r\n    }\r\n\r\n    const handleLogoClick = () => {\r\n        if (currentProfileRole === \"user\") {\r\n            navigate(\"/UserMain\");\r\n        } else {\r\n            navigate(\"/Creatormain\");\r\n        }\r\n    }\r\n\r\n\r\n    const [notifications, setNotifications] = useState(true);\r\n    if (userObj && currentProfileRole === \"user\") {\r\n        setNotifications(true)\r\n    }\r\n\r\n    const [profileDrop, setProfileDrop] = useState(false);\r\n\r\n    const [videoButtonActive, setVideoButtonActive] = useState(1);\r\n\r\n    const [burgerMenuActive, setBurgerMenuActive] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className={burgerMenuActive ? \"burger-menu open\" : \"burger-menu\"} onClick={() => { setBurgerMenuActive(!burgerMenuActive) }}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n            <div className={burgerMenuActive ? \"burger-menu__menu active\" : \"burger-menu__menu\"}>\r\n                <div className=\"burger-menu__row\">\r\n                    Video\r\n                </div>\r\n                <div className=\"burger-menu__row\">\r\n                    Store\r\n                </div>\r\n                <div className=\"burger-menu__row\">\r\n                    <img src={`http://localhost:1337${currentProfileAvatar}`} alt=\"\" className=\"burger-menu__icon\" />\r\n                    Profile\r\n                </div>\r\n                <div className=\"burger-menu__row\">\r\n                    <div className=\"header__notifications\">\r\n                        <img src={notifyIcon} alt=\"1\" className=\"header__notifications-icon\" />\r\n                        <div className={notifications ? \"header__notifications-number active\" : \"header__notifications-number\"}>4</div>\r\n                    </div>\r\n                    Notification\r\n                </div>\r\n            </div>\r\n            <div className=\"header\">\r\n\r\n\r\n                <img src={siteLogo} alt=\"\" className=\"header__logo\" onClick={()=>{handleLogoClick()}}/>\r\n\r\n                <div className=\"header__buttons\">\r\n                    <div className=\"header__search-container\">\r\n                        <Search></Search>\r\n                    </div>\r\n\r\n                    <div className=\"header__notifications\">\r\n                        <img src={notifyIcon} alt=\"\" className=\"header__notifications-icon\" />\r\n                        <div className={notifications ? \"header__notifications-number active\" : \"header__notifications-number\"}>4</div>\r\n                    </div>\r\n\r\n                    {props.videosButtons && (\r\n                        <div className=\"header__videos-buttons\">\r\n                            <button className={videoButtonActive === 1 ? \"header__video-button active\" : \"header__video-button\"} onClick={() => { setVideoButtonActive(1) }}>Video</button>\r\n                            <button className={videoButtonActive === 2 ? \"header__video-button active\" : \"header__video-button\"} onClick={() => { setVideoButtonActive(2) }}>Store</button>\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                    {/* {user ?  */}\r\n                    <div className=\"header__profile\">\r\n                        <div className={profileDrop ? \"header__profile-preview active\" : \"header__profile-preview\"} onClick={() => { setProfileDrop(!profileDrop) }}>\r\n                            <img src={`http://localhost:1337${currentProfileAvatar}`} alt=\"\" className=\"header__profile-avatar\" />\r\n                            Profile\r\n                        </div>\r\n                        <div className={profileDrop ? \"header__profile-dropdown active\" : \"header__profile-dropdown\"}>\r\n                            <Link to=\"/EditProfile\">\r\n                                <div className=\"header__profile-row\" onClick={()=>{navigate(\"/EditProfile\")}}>\r\n                                    <img src={editIcon} alt=\"\" className=\"header__profile-row-icon\" />\r\n                                    <div className=\"header__profile-row-text\">Edit profile</div>\r\n                                </div>\r\n                            </Link>\r\n                            <Link to=\"/LogIn\" onClick={() => { dispatch(logoutUser()) }}>\r\n                                <div className=\"header__profile-row\">\r\n                                    <img src={diamondIcon} alt=\"\" className=\"header__profile-row-icon\" />\r\n                                    <div className=\"header__profile-row-text\">Switch to <br />business account</div>\r\n                                </div>\r\n                            </Link>\r\n                            <div className=\"header__profile-line\"></div>\r\n                            <Link to=\"/LogIn\" onClick={() => { dispatch(logoutUser()) }}>\r\n                                <div className=\"header__profile-row\">\r\n                                    <img src={logoutIcon} alt=\"\" className=\"header__profile-row-icon\" />\r\n                                    <div className=\"header__profile-row-text\">Log out</div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    {/* :\r\n                            <OrangeButton width={120} marginTop={0} marginLeft={0} height={40} text=\"Sign in\" handleLogin={handleClick}></OrangeButton>\r\n                        }\r\n                    </div> */}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":""}